name: Build, Publish Docker Image, and Release Binaries

on:
  push:
    branches:
      - release

jobs:
  build-and-release-binaries:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Install xtask
        run: cargo install cargo-xtask

      - name: Install configure-crosstool
        run: cargo xtask configure-crosstool aarch64-apple-darwin x86_64-apple-darwin

      - name: Build Linux binary x86_64-gnu
        run: |
          cross build --target x86_64-unknown-linux-gnu --release
          mkdir -p build/linux-gnu/
          cp target/x86_64-unknown-linux-gnu/release/easy-proxy build/linux-gnu/

      - name: Build Linux binary x86_64-musl
        run: |
          cross build --target x86_64-unknown-linux-musl --release
          mkdir -p build/linux-musl/
          cp target/x86_64-unknown-linux-musl/release/easy-proxy build/linux-musl/

      - name: Build Linux binary aarch64-gnu
        run: |
          cross build --target aarch64-unknown-linux-gnu --release
          mkdir -p build/linux-gnu/
          cp target/aarch64-unknown-linux-gnu/release/easy-proxy build/linux-gnu/

      - name: Build Linux binary aarch64-musl
        run: |
          cross build --target aarch64-unknown-linux-musl --release
          mkdir -p build/linux-musl/
          cp target/aarch64-unknown-linux-musl/release/easy-proxy build/linux-musl/

      # push binaries to release
      - name: Push binaries to release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/linux-gnu/easy-proxy
            build/linux-musl/easy-proxy
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          title: ${{ github.ref }}